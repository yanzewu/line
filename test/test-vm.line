$j = "1"
print $j

# String for loop
for i = "1 2" do
    print $i
done

# Expression
for i = ([1, 2]) do
    print $i
done

# Range
for i = (range(1, 3)) do
    print $i
done

# Single Line
for i = "1 2" do print $i; done
for $i = "1 2" do print $i; done
for "i" = "1 2" do print $i; done

print "The results above should all be 1 2"

# Variable

let a = 1
let $b = range(1,3)
let $c = x

print "Should be 1:" $a
print "Should be 1 2:" $b 
print "Should be [-5 ... 4]" $c

# Function
let fun = do
    print $i
    print $j
    plot "test/dataload/batch1.txt" 1:2
done
fun
display

# Function with args

let fun3 = do
    print "fun3:" $(arg(1))
done
let fun2 = do
    print "fun2:" $(arg(1))
    fun3 $(arg(2))
done
$u = 4
print $u
fun2 5.0 $u
print "Should be fun2:5.0, fun3:4"

if $("true") then print "true-1"
    print "true-2"
else print "should not happen"
    print "should not happen"
end

if "false" then
    print "should not happen"
else
    print "false"
end

if "false" then
    print "should not happen"
end

if "true" then
    print "true-3"
end

let fun3 = do
    print "true-4"
done

if "true" call fun3
if "false" call fun3

# Nested controls

for i = $([1,2]) do
    for j = $([3,4]) do
        print $i $j
    end
    if $(i==2) then
        let fun4 = do
            for k = $([5,6]) do print $k
            end
        end
        fun4
    end

end
print "Should be: 1 3; 1 4; 2 3; 2 4; 5; 6"

if $true and $false or "false" or not $(1+2 == 4) then
    print "true-5"
else
    print "Should not happen"
end

let fun5 = do
    if $(arg(1) == "0") then
        print "0!"
    else 
        if $(arg(1) == "1") then
            print "1!"
        else
            print "2!"
        end
    end
end

fun5 0
fun5 1
fun5 2
print "Should be: 0! 1! 2!"

let fun6 = do print "fun6"; done
fun6

let fun7 = do
    print "Should be A:" $(option('a')) 
    print "Should be 3:" $(option('b'))
    print "Should be True:" $(option('c'))
    print "Should be None:" $(option('d'))
    print "Should be [X1, X2]:" $(option())
end

fun7 -c $false -a A -c -b $(1+2) X1 X2